api:
  tableId-service:
    uri: TableId-service/tableid 
  holder-account-service:
    uri: holder-account-service/holder-account
  SignCustAccount-service:
    uri: SignCustAccount-service/signCustAccount
  account-service:
    uri: account-service/account 
  credit-service:
    uri: credit-service/credit
  account-card-service:
    uri: account-card-service/accountcard
  movement-account-service:
    uri: movement-account-service/movement-account
  movementCredit-service:
    uri: movementCredit-service/movementCredit
  bank-transfers-service:
    uri: bank-transfers-service/bank-transfer
  movement-card-service:
    uri: movement-card-service/movement-card
  kafka-uri:
    card-topic: card-topic
    card-topic-respose: card-topic-respose  
server:
  port: 8094
spring:
  data:
    mongodb:
      database: bank
      port: '27017'
      host: localhost
  kafka:    
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers:
      - 127.0.0.1:9092   
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:      
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers:
      - 127.0.0.1:9092
#server:
#  port: ${PORT:${SERVER_PORT:0}}      
feign:
  circuitbreaker:
    enabled: true
  client: 
    config: 
      default: 
        connectTimeout: 10000 
        readTimeout: 20000
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8092/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}  