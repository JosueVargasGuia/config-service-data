api:
  tableId-service:
    uri: TableId-service/tableid
  product-service:
    uri: product-service/product
  customer-service:
    uri: customer-service/customer
  movement-account-service:
    uri: movement-account-service/movement-account
  configuration-service:
    uri: configuration-service/configuration
  card-service:
    uri: card-service/card
  credit-service:
    uri: credit-service/credit
  kafka-uri:  
      account-bank-topic: account-bank-topic
      account-topic-respose: account-topic-respose
server:
  port: '8086'
spring:
  data:
    mongodb:
      database: bank
      port: '27017'
      host: localhost
  redis:
    host: 127.0.0.1.15
    port: 6379
  kafka:    
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers:
      - 127.0.0.1:9092   
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:      
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers:
      - 127.0.0.1:9092
#server:
#  port: ${PORT:${SERVER_PORT:0}}      
feign:
  circuitbreaker:
    enabled: true
  client: 
    config: 
      default: 
        connectTimeout: 10000 
        readTimeout: 20000
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8092/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}  
logging:
  file:
    name: log/${spring.application.name}.log   
  logback:
    rollingpolicy:
      max-file-size: 3MB
      file-name-pattern: log/${spring.application.name}-%d{yyyy-MM-dd}.%i.log
      total-size-cap: 100MB
      clean-history-on-start: true
      max-history: 10