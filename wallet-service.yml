server:
  port: 9080
spring:
  data:
    mongodb:
      database: bank
      port: '27017'
      host: localhost     
  redis:
    host: 127.0.0.1.15
    port: 6379
  kafka:    
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers:
      - 127.0.0.1:9092   
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:      
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers:
      - 127.0.0.1:9092
api:
  kafka-uri:
    customer-topic: customer-wallet
    customer-topic-respose: customer-topic-respose 
    card-topic: card-topic
    card-topic-respose: card-topic-respose
    movement-wallet-topic: movement-wallet
#    movement-wallet-topic-respone: movement-wallet-respone
#feign:
#  circuitbreaker:
#    enabled: true
#  client: 
#    config: 
#      default: 
#        connectTimeout: 10000 
#        readTimeout: 20000
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8092/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
Configutation:
  name: Default
  Properties:
    Property:
      name: log-path
      value: "logs"
  Appenders:
    Console:
      name: Console_Appender
      target: SYSTEM_OUT
      PatternLayout:
        pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"
    File:
      name: File_Appender
      fileName: ${log-path}/logfile.log
      PatternLayout:
        pattern: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n"