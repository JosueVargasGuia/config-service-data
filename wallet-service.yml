server:
  port: 9080
spring:
  data:
    mongodb:
      database: bank
      port: '27017'
      host: 192.168.1.11
  redis:
    host: 192.168.1.11
    port: 6379
  kafka:    
    bootstrap-servers: 192.168.1.11:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      bootstrap-servers:
#      - 192.168.1.11:9092
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    producer:      
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      bootstrap-servers:
#      - 192.168.1.11:9092
    
api:
  kafka-uri:
    customer-topic: customer-wallet
    customer-topic-respose: customer-topic-respose 
    card-topic: card-topic
    card-topic-respose: card-topic-respose
    movement-wallet-topic: movement-wallet
    account-wallet-topic: account-wallet-topic    
    account-topic-respose: account-topic-respose
#    movement-wallet-topic-respone: movement-wallet-respone
#feign:
#  circuitbreaker:
#    enabled: true
#  client: 
#    config: 
#      default: 
#        connectTimeout: 10000 
#        readTimeout: 20000
eureka:
  client:
    service-url:
      defaultZone: http://192.168.1.11:8092/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
logging:
  file:
    name: log/${spring.application.name}.log   
  logback:
    rollingpolicy:
      max-file-size: 3MB
      file-name-pattern: log/${spring.application.name}-%d{yyyy-MM-dd}.%i.log
      total-size-cap: 100MB
      clean-history-on-start: true
      max-history: 10